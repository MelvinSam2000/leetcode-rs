# Cracking the coding interview (Leetcode equivalents)
# Link: https://leetcode.com/discuss/general-discussion/1152824/cracking-the-coding-interview-6th-edition-in-leetcode

[ ] All Done!

Chapter 1: Arrays and Strings

1.1 Is Unique
[x] 217. Contains Duplicate

1.2 Check Permutation
[x] 242. Valid Anagram
[x] 567. Permutation in String

1.3 URLify ‚Üê Not Found

1.4 Palindrome Permutation
[ ] 266. Palindrome Permutation

1.5 One Away
[ ] 161. One Edit Distance
[x] 72. Edit Distance

1.6 String Compression
[ ] 443. String Compression

1.7 Rotate Matrix
[x] 48. Rotate Image

1.8 Zero Matrix
[x] 73. Set Matrix Zeroes

1.9 String Rotation
[x] 796. Rotate String

Chapter 2: Linked Lists

2.1 Remove Dups
[ ] 1836. Remove Duplicates From an Unsorted Linked List

2.2 Return Kth to Last
[x] 19. Remove Nth Node From End of List

2.3 Delete Middle Node
[ ] 237. Delete Node in a Linked List

2.4 Partition
[ ] 86. Partition List

2.5 Sum Lists
[x] 2. Add Two Numbers
[ ] 445. Add Two Numbers II

2.6 Palindrome
[x] 234. Palindrome Linked List

2.7 Intersection
[ ] 160. Intersection of Two Linked Lists

2.8 Loop Detection
[x] 142. Linked List Cycle II

Chapter 3: Stacks and Queues

3.1 Three In One - Not Found

3.2 Stack Min
[x] 155. Min Stack

3.3 Stack of Plates
[ ] 1172. Dinner Plate Stacks

3.4 Queue via Stacks
[x] 232. Implement Queue using Stacks

3.5 Sort Stacks - Not Found

3.6 Animal Shelter - Not Found

Chapter 4: Trees and Graphs

4.1 Route Between Nodes
[ ] 1971. Find if Path Exists in Graph

4.2 Minimal Tree
[ ] 108. Convert Sorted Array to Binary Search Tree

4.3 List of Depths
[x] 102. Binary Tree Level Order Traversal

4.4 Check Balanced
[x] 110. Balanced Binary Tree

4.5 Validate BST
[x] 98. Validate Binary Search Tree

4.6 Successor
[ ] 510. Inorder Successor in BST II

4.7 Build Order
[x] 210. Course Schedule II

4.8 First Common Ancestor
[ ] 236. Lowest Common Ancestor of a Binary Tree

4.9 BST Sequences
[ ] 1569. Number of Ways to Reorder Array to Get Same BST

4.10 Check Subtree
[x] 572. Subtree of Another Tree

4.11 Random Node - Not Found

4.12 Paths with Sum
[ ] 437. Path Sum III

Chapter 8: Recursion and Dynamic Programming

8.1 Triple Step
[x] 1137. N-th Tribonacci Number

8.2 Robot in a Grid
[x] 63. Unique Paths II

8.3 Magic Index - Not Found

8.4 Power Set
[x] 78. Subsets

8.5 Recursive Multiply
[ ] 29. Divide Two Integers

8.6 Towers of Hanoi - Not Found
[x] (Lintcode) 169 - Tower of Hanoi

8.7 Permutation without Dups
[x] 46. Permutations

8.8 Permutation with Duplicates
[ ] 47. Permutations II

8.9 Parens
[x] 22. Generate Parentheses

8.10 Paint Fill
[x] 733. Flood Fill

8.11 Coins
[x] 518. Coin Change 2

8.12 Eight Queens
[x] 51. N-Queens

8.13 Stack of Boxes
[ ] 1691. Maximum Height by Stacking Cuboids

8.14 Boolean Evaluation - Not Found

Chapter 10: Sorting and Searching

10.1 Sorted Merge
[x] 88. Merge Sorted Array *

10.2 Group Anagrams
[x] 49. Group Anagrams

10.3 Search in Rotated Array
[ ] 81. Search in Rotated Sorted Array II
[x] 33. Search in Rotated Sorted Array

10.4 Sorted Search
[ ] 702. Search in a Sorted Array of Unknown Size

10.5 Sparse Search - Not Found

10.6 Sort Big File - Not Found

10.7 Missing Int
[x] 268. Missing Number

10.8 Find Duplicates
[x] 287. Find the Duplicate Number

10.9 Sorted Matrix Search
[ ] 240. Search a 2D Matrix II

10.10 Rank from Stream
[ ] 703. Kth Largest Element in a Stream

10.11 Peaks and Valleys
[ ] 280. Wiggle Sort

Chapter 16: Moderate

16.1. Number Swapper - Not Found

16.2. Word Frequencies
[ ] 192. Word Frequency

16.3. Intersection - Not Found

16.4. Tic Tac Win
[ ] 1275. Find Winner on a Tic Tac Toe Game

16.5. Factorial Zeros
[x] 172. Factorial Trailing Zeroes

16.6. Smallest Difference - Not Found

16.7. Number Max - Not Found

16.8. English Int
[ ] 273. Integer to English Words

16.9. Operations - Not Found

16.10. Living People - Not Found

16.11. Diving Board - Not Found

16.12. XML Encoding - Not Found

16.13. Bisect Squares - Not Found

16.14. Best Line
[ ] 149. Max Points on a Line

16.15. Master Mind - Not Found

16.16. Sub Sort
[ ] 581. Shortest Unsorted Continuous Subarray

16.17. Contiguous Sequence
[x] 53. Maximum Subarray

16.18. Pattern Matcher
[x] 290. Word Pattern

16.19. Pond Sizes
[x] 200. Number of Islands

16.20. T9
[ ] 17. Letter Combinations of a Phone Number

16.21. Sum Swap - Not Found

16.22. Langtons Ant - Not Found

16.23. Rand7 From Rand5
[ ] 470. Implement Rand10() Using Rand7()

16.24. Pairs With Sum
[ ] 1679. Max Number of K-Sum Pairs

16.25. LRU Cache
[x] 146. LRU Cache

16.26. Calculator
[ ] 227. Basic Calculator II

Chapter 17: Hard

17.1. Add Without Plus
[x] 371. Sum of Two Integers
[ ] 67. Add Binary

17.2. Shuffle
[ ] 384. Shuffle an Array

17.3. Random Set - Not Found

17.4. Missing Number
[x] 268. Missing Number

17.5. Letters and Numbers
[ ] 525. Contiguous Array

17.6. Count of 2s - Not Found

17.7. Baby Names - Not Found

17.8. Circus Tower - Not Found

17.9. Kth Multiple - Not Found

17.10. Majority Element
[x] 169. Majority Element

17.11. Word Distance
[ ] 244. Shortest Word Distance II
[ ] 243. Shortest Word Distance

17.12. BiNode
[ ] 426. Convert Binary Search Tree to Sorted Doubly Linked List

17.13. ReSpace - Not Found

17.14. Smallest K
[x] 215. Kth Largest Element in an Array

17.15. Longest Word
[ ] 472. Concatenated Words

17.16. The Masseuse
[x] 198. House Robber

17.17. Multi Search - Not Found

17.18. Shortest Supersequence
[ ] 727. Minimum Window Subsequence

17.19. Missing Two
[x] 268. Missing Number

17.20. Continuous Median
[x] 295. Find Median from Data Stream

17.21. Volume of Histogram
[x] 42. Trapping Rain Water

17.22. Word Transformer
[ ] 127. Word Ladder

17.23. Max Black Square
[x] 221. Maximal Square

17.24. Max Submatrix - Not Found

17.25. Word Rectangle - Not Found

17.26. Sparse Similarity - Not Found