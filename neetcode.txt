# https://neetcode.io/
# Neetcode 150
# Also contains all Blind 75 problems

[ ] All Done!

1. Arrays & Hashing
[x] 217 - Contains Duplicate
[x] 242 - Valid Anagram
[x] 1 - Two Sum 
[x] 49 - Group Anagrams 
[x] 347 - Top k frequent elements 
[x] 238 - Product of array except self 
[ ] 36 - Valid Sudoku 
[p] 271 - Encode and Decode Strings (Locked)
[x] 128 - Longest Consecutive Sequence

2. Two Pointers
[x] 125 - Valid Palindrome
[x] 167 - Two Sum II - Sorted input array 
[x] 15 - 3Sum
[x] 11 - Container with most water
[x] 42 - Trapping Rain water

3. Sliding Window
[x] 121 - Best time to buy/sell stock 
[x] 3 - Longest Substring without repeating chars 
[x] 424 - Longest repeating char replacement *
[x] 567 - Permutation in String 
[ ] 76 - Minimum window substring 
[x] 239 - Sliding window maximum (Mono Queue) *

4. Stack
[x] 20 - Valid Parentheses 
[x] 155 - Min Stack 
[x] 150 - Evaluate Reverse Polish Notation 
[x] 22 - Generate Parentheses
[x] 739 - Daily Temperatures (Mono Stack) *
[ ] 853 - Car Fleet 
[ ] 84 - Largest Rectangle in Histogram

5. Binary Search
[x] 704 - Binary Search 
[ ] 74 - Search a 2d matrix 
[ ] 875 - Koko eating bananas
[x] 33 - Search in rotated sorted array 
[x] 153 - Find minimum in rotated sorted array 
[ ] 981 - Time based key value store 
[ ] 4 - Median of 2 sorted arrays 

6. Linked List
[x] 206 - Reverse Linked List 
[x] 21 - Merge 2 Sorted Lists 
[x] 143 - Reorder List *
[x] 19 - Remove Nth Node from End of List 
[-] 138 - Copy List with Random Pointer
[x] 2 - Add 2 Numbers 
[p] 141 - Linked List Cycle
[x] 287 - Find the duplicate number 
[x] 146 - LRU Cache 
[x] 23 - Merge k sorted lists 
[ ] 25 - Reverse nodes in k group

7. Trees
[x] 226 - Invert Binary Tree
[x] 104 - Max Depth of Binary Tree 
[ ] 543 - Diameter of Binary Tree 
[x] 110 - Balanced Binary Tree *
[x] 100 - Same Tree 
[x] 572 - Subtree of another tree 
[x] 235 - LCA of binary tree 
[x] 102 - Binary Tree level order traversal
[ ] 199 - Binary Tree Right side view 
[ ] 1448 - Count good nodes in binary tree 
[x] 98 - Validate BST 
[x] 230 - Kth Smallest Element in BST 
[x] 105 - Construct BST from Preorder and Inorder traversal 
[ ] 124 - Binary Tree Max path sum 
[x] 297 - Serialize and Deserialize Binary Tree 

8. Tries
[x] 208 - Implement Prefix Trie
[x] 211 - Design Add Search Word Data Structure
[x] 212 - Word Search II 

9. Heap/Priority Queue
[x] 703 - Kth Largest Element in stream
[x] 1046 - Last Stone Weight
[x] 973 - K Closest Points to Origin
[x] 215 - Kth Largest Element in array 
[ ] 621 - Task Scheduler 
[x] 355 - Design Twitter 
[x] 295 - Find Median from Data stream

10. Backtracking
[x] 78 - Subsets *
[x] 39 - Combination Sum
[x] 46 - Permutations 
[ ] 90 - Subsets II 
[ ] 40 - Combination Sum II 
[x] 79 - Word Search 
[ ] 131 - Palindrome Partitioning
[ ] 17 - Letter Combinations of Phone Number 
[x] 51 - N Queens

11. Graphs
[x] 200 - Number of Islands 
[p] 133 - Clone Graph
[x] 695 - Max Area of Island
[x] 417 - Pacific Atlantic Waterflow *
[ ] 130 - Surrounded Regions
[ ] 994 - Rotting Oranges
[ ] 286 - Walls and Gates (Locked)
[x] 207 - Course Schedule 
[x] 210 - Course Schedule II 
[ ] 684 - Redundant Connection 
[x] 547 - Number of Provinces
[x] 261 - Graph Valid Tree (Locked)
[ ] 127 - Word Ladder

12. Advanced Graphs
[x] 322 - Reconstruct Itinerary
[x] 1584 - Min Cost to connect all points 
[x] 743 - Network Delay Time *
[ ] 778 - Swim in Rising Water 
[x] 269 - Alien Dictionary (locked) *
[x] 787 - Cheapest Flights within K stops *

13. DP 1-D
[x] 70 - Climbing Stairs
[x] 746 - Min Cost Climbing Stairs
[x] 198 - House Robber 
[x] 213 - House Robber II 
[x] 5 - Longest Palindromic Substring 
[x] 647 - Palindromic Substrings **
[x] 91 - Decode Ways 
[x] 322 - Coin Change
[x] 152 - Max Product Subarray
[x] 139 - Word break 
[x] 300 - Longest Increasing Subsequence 
[x] 416 - Partition Equal Subset Sum

14. DP 2-D 
[x] 62 - Unique Paths
[x] 1143 - Longest Common Subsequence
[x] 309 - Best time to buy/sell stock w cooldown
[x] 518 - Coin Change 2
[x] 494 - Target Sum
[x] 97 - Interleaving String 
[x] 329 - Longest Increasing Path in Matrix *
[x] 115 - Distinct Subsequences *
[x] 72 - Edit Distance *
[x] 312 - Burst Balloons *
[x] 10 - Regular Expression Matching *

15. Greedy
[x] 53 - Maximum Subarray
[x] 55 - Jump Game
[x] 45 - Jump Game II
[ ] 134 - Gas Station
[ ] 846 - Hand of Straights
[ ] 1899 - Merge Triplets to form target Triplets
[ ] 763 - Partition labels
[x] 678 - Valid Parenthesis String

16. Intervals
[ ] 57 - Insert Interval
[x] 56 - Merge Intervals
[x] 435 - Non Overlapping Intervals
[x] 252 - Meeting Rooms (Locked)
[ ] 253 - Meeting Rooms II (Locked)
[ ] 1851 - Minimum Interval to include each query

17. Math & Geometry
[x] 48 - Rotate Image
[x] 54 - Spiral Matrix
[x] 73 - Set Matrix Zeroes
[x] 202 - Happy Number
[x] 66 - Plus One
[x] 50 - Pow(x, n)
[ ] 43 - Multiply Strings
[ ] 2013 - Detect Squares 

18. Bit Manipulation
[x] 136 - Single Number
[x] 191 - Number of 1 bits
[x] 338 - Counting bits
[x] 190 - Reverse bits
[x] 268 - Missing Number
[x] 371 - Sum of 2 integers *
[x] 7 - Reverse Integer